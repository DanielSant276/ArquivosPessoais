O que são deadlocks e impasses? Quais as diferenças? Descreva, em detalhes, o funcionamento dos algoritmos de prevenção e eliminação de deadlocks. Explique e compare as diferenças de como eles são materializados nos SGBDs MySQL e Postgresql.


	Os locks ocorrem quando uma transação acessa uma parte dos dados onde outra transação também esteja precisando desses dados ao mesmo tempo. Ao realizar o lock dos dados, é garantido que, no momento que a query entrar em execução, nenhuma informação sua será alterada por outra transação. Eles são normais e é um mecanismo usado pelos SGBDs para protegerem a integridade dos dados durante as transações.
Os blocks (bloqueio) ocorrem quando duas transações precisam acessar de forma simultaneamente o mesmo fragmento de dados. Assim, uma transação dá um lock dos dados que estão sendo acessados, e a próxima transação que os quiser utilizar fica bloqueada (blocked) esperando que o outro conclua e termine o lock. Quando a primeira transação for concluída, a transação que à estava bloqueado é desbloqueado e segue a sua operação. A cadeia de blocks é parecida com o funcionamento de uma fila. Uma situação de block NÃO pode ser resolvida por si só, ou seja, ela depende de quem realizou o lock retirá-lo. Se o processo de lock não concluiu a transação corretamente, ela mantém todos as outras transações em blocks, às vezes podendo levar muito tempo para tudo ser concluído.
O deadlock ocorre quando uma transação entra em block e espera por uma segunda transação para concluir seu trabalho e liberar os locks. Enquanto a segunda transação ao mesmo tempo entra em block e espera que a primeira libere seu lock, ou seja, existe uma dependência cruzada entre elas, que nunca será resolvida.
Em um deadlock, as transações já estão bloqueando uma a outra, portanto, é necessário que haja uma intervenção externa para resolver o impasse. Por isso, os SGBDs possuem mecanismos de detecção e resolução de conflitos, em que uma transação precisa ser escolhido e ser eliminado para que a outrao possa continuar funcionando. A transação escolhida como vítima recebe uma mensagem de erro muito específica indicando que ele foi escolhido como uma vítima de deadlock, podendo a transação ser reiniciado por meio do código com base nessa mensagem de erro. Os deadlocks são considerados uma situação crítica no mundo do banco de dados, pois as transações são terminados automaticamente sem sua conclusão.

	Em um deadlock, os processos já estão bloqueando um ao outro, portanto, é necessário que haja uma intervenção externa para resolver o impasse. Por isso, os SGBDs possuem mecanismos de detecção e resolução de conflitos, em que um processo precisa ser escolhido e ser eliminado para que o outro processo possa continuar funcionando. O processo escolhido como vítima recebe uma mensagem de erro muito específica indicando que ele foi escolhido como uma vítima de deadlock, podendo o processo ser reiniciado por meio do código com base nessa mensagem de erro. Os deadlocks são considerados uma situação crítica no mundo do banco de dados, pois os processos são terminados automaticamente sem sua conclusão.